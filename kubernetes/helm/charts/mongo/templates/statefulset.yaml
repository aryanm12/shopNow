apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "mongo.fullname" . }}
spec:
  serviceName: {{ .Values.service.headlessName }}
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ include "mongo.fullname" . }}
  # Demo-only retention policy
  # When this StatefulSet is deleted, PVCs created from volumeClaimTemplates will be deleted.
  # When the StatefulSet is scaled down, PVCs for removed replicas will be deleted.
  persistentVolumeClaimRetentionPolicy:
    whenDeleted: {{ .Values.persistentVolumeClaimRetentionPolicy.whenDeleted }}
    whenScaled: {{ .Values.persistentVolumeClaimRetentionPolicy.whenScaled }}
  template:
    metadata:
      labels:
        app: {{ include "mongo.fullname" . }}
    spec:
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      containers:
        - name: mongo
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.service.port }}
          volumeMounts:
            - name: mongo-pvc
              mountPath: /data/db
          readinessProbe:
            exec:
              command:
                - mongosh
                - --eval
                - "db.adminCommand('ping')"
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
  volumeClaimTemplates:
    - metadata:
        name: mongo-pvc
      spec:
        accessModes: ["ReadWriteOnce"]
        storageClassName: {{ .Values.stateful.volume.storageClassName }}
        resources:
          requests:
            storage: {{ .Values.stateful.volume.storage }}
